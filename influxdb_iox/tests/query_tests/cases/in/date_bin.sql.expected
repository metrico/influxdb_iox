-- Test Setup: OneMeasurementTwoSeries
-- SQL: select date_bin(INTERVAL '1 month', column1) from (values (timestamp '2022-01-01 00:00:00'), (timestamp '2022-01-01 01:00:00'), (timestamp '2022-01-02 00:00:00'), (timestamp '2022-02-02 00:00:00'), (timestamp '2022-02-15 00:00:00'), (timestamp '2022-03-31 00:00:00') ) as sq;
+----------------------------------------------------------------------------+
| date_bin(IntervalMonthDayNano("79228162514264337593543950336"),sq.column1) |
+----------------------------------------------------------------------------+
| 2022-01-01T00:00:00Z                                                       |
| 2022-01-01T00:00:00Z                                                       |
| 2022-01-01T00:00:00Z                                                       |
| 2022-02-01T00:00:00Z                                                       |
| 2022-02-01T00:00:00Z                                                       |
| 2022-03-01T00:00:00Z                                                       |
+----------------------------------------------------------------------------+
-- SQL: select date_bin('1 year', column1) from (values (timestamp '2022-01-01 00:00:00'), (timestamp '2023-01-01 01:00:00'), (timestamp '2022-01-02 00:00:00'), (timestamp '2022-02-02 00:00:00'), (timestamp '2022-02-15 00:00:00'), (timestamp '2022-03-31 00:00:00') ) as sq;
+-------------------------------------+
| date_bin(Utf8("1 year"),sq.column1) |
+-------------------------------------+
| 2022-01-01T00:00:00Z                |
| 2023-01-01T00:00:00Z                |
| 2022-01-01T00:00:00Z                |
| 2022-01-01T00:00:00Z                |
| 2022-01-01T00:00:00Z                |
| 2022-01-01T00:00:00Z                |
+-------------------------------------+
-- SQL: select date_bin('1 month', column1, '1970-12-31T00:15:00Z') from (values (timestamp '2022-01-01 00:00:00'), (timestamp '2022-01-01 01:00:00'), (timestamp '2022-01-02 00:00:00'), (timestamp '2022-02-02 00:00:00'), (timestamp '2022-02-15 00:00:00'), (timestamp '2022-03-31 00:00:00') ) as sq;
+-------------------------------------------------------------------+
| date_bin(Utf8("1 month"),sq.column1,Utf8("1970-12-31T00:15:00Z")) |
+-------------------------------------------------------------------+
| 2021-12-31T00:15:00Z                                              |
| 2021-12-31T00:15:00Z                                              |
| 2021-12-31T00:15:00Z                                              |
| 2022-01-31T00:15:00Z                                              |
| 2022-01-31T00:15:00Z                                              |
| 2022-02-28T00:15:00Z                                              |
+-------------------------------------------------------------------+
-- SQL: SELECT DATE_BIN('5 month', '2022-01-01T00:00:00Z');
+--------------------------------------------------------+
| date_bin(Utf8("5 month"),Utf8("2022-01-01T00:00:00Z")) |
+--------------------------------------------------------+
| 2021-09-01T00:00:00Z                                   |
+--------------------------------------------------------+
-- SQL: SELECT DATE_BIN('3 month', '2022-04-01T00:00:00Z', '2021-05-31T00:04:00Z');
+-------------------------------------------------------------------------------------+
| date_bin(Utf8("3 month"),Utf8("2022-04-01T00:00:00Z"),Utf8("2021-05-31T00:04:00Z")) |
+-------------------------------------------------------------------------------------+
| 2022-02-28T00:04:00Z                                                                |
+-------------------------------------------------------------------------------------+
-- SQL: select date_bin('1 month', timestamp '2000-01-31T00:00:00', timestamp '2000-02-29T00:00:00');
+-----------------------------------------------------------------------------------+
| date_bin(Utf8("1 month"),Utf8("2000-01-31T00:00:00"),Utf8("2000-02-29T00:00:00")) |
+-----------------------------------------------------------------------------------+
| 2000-01-29T00:00:00Z                                                              |
+-----------------------------------------------------------------------------------+
-- SQL: select date_bin('1 month', timestamp '2000-01-31T00:00:00', timestamp '2000-03-29T00:00:00');
+-----------------------------------------------------------------------------------+
| date_bin(Utf8("1 month"),Utf8("2000-01-31T00:00:00"),Utf8("2000-03-29T00:00:00")) |
+-----------------------------------------------------------------------------------+
| 2000-01-29T00:00:00Z                                                              |
+-----------------------------------------------------------------------------------+
-- SQL: SELECT DATE_BIN('3 years 1 months', '2022-09-01 00:00:00Z');
+-----------------------------------------------------------------+
| date_bin(Utf8("3 years 1 months"),Utf8("2022-09-01 00:00:00Z")) |
+-----------------------------------------------------------------+
| 2022-06-01T00:00:00Z                                            |
+-----------------------------------------------------------------+
-- SQL: SELECT * FROM cpu ORDER BY REGION, TIME;
+------+--------+----------------------+------+
| idle | region | time                 | user |
+------+--------+----------------------+------+
| 70.0 | a      | 2000-05-05T12:20:00Z | 23.2 |
|      | a      | 2000-05-05T12:40:00Z | 21.0 |
|      | b      | 2000-05-05T12:31:00Z | 25.2 |
| 60.0 | b      | 2000-05-05T12:39:00Z | 28.9 |
+------+--------+----------------------+------+
-- SQL: SELECT * FROM cpu ORDER BY TIME;
+------+--------+----------------------+------+
| idle | region | time                 | user |
+------+--------+----------------------+------+
| 70.0 | a      | 2000-05-05T12:20:00Z | 23.2 |
|      | b      | 2000-05-05T12:31:00Z | 25.2 |
| 60.0 | b      | 2000-05-05T12:39:00Z | 28.9 |
|      | a      | 2000-05-05T12:40:00Z | 21.0 |
+------+--------+----------------------+------+
-- SQL: SELECT date_bin('1 month', time) as month, count(cpu.user) from cpu where time between timestamp '2000-05-05T12:00:00Z' and timestamp '2000-05-05T12:59:00Z' group by month;
+----------------------+-----------------+
| month                | COUNT(cpu.user) |
+----------------------+-----------------+
| 2000-05-01T00:00:00Z | 4               |
+----------------------+-----------------+
-- SQL: SELECT date_bin('1 month', time, '1970-12-31T00:15:00Z') as month, count(cpu.user) from cpu where time between timestamp '2000-05-05T12:00:00Z' and timestamp '2000-05-05T12:59:00Z' group by month;
+----------------------+-----------------+
| month                | COUNT(cpu.user) |
+----------------------+-----------------+
| 2000-04-30T00:15:00Z | 4               |
+----------------------+-----------------+
-- SQL: select date_bin('2 month', time, timestamp '2000-02-29T00:00:00') as month, count(cpu.user) from cpu where time between timestamp '2000-05-05T12:00:00Z' and timestamp '2000-05-05T12:59:00Z' group by month;
+----------------------+-----------------+
| month                | COUNT(cpu.user) |
+----------------------+-----------------+
| 2000-04-29T00:00:00Z | 4               |
+----------------------+-----------------+
-- SQL: EXPLAIN SELECT date_bin('1 month', time, '1970-12-31T00:15:00Z') as month, count(cpu.user) from cpu where time between timestamp '2000-05-05T12:00:00Z' and timestamp '2000-05-05T12:59:00Z' group by month;
-- Results After Normalizing UUIDs
----------
| plan_type    | plan    |
----------
| logical_plan    | Projection: date_bin(Utf8("1 month"),cpu.time,Utf8("1970-12-31T00:15:00Z")) AS month, COUNT(cpu.user)    |
|    |   Aggregate: groupBy=[[date_bin(IntervalMonthDayNano("79228162514264337593543950336"), cpu.time, TimestampNanosecond(31450500000000000, None)) AS date_bin(Utf8("1 month"),cpu.time,Utf8("1970-12-31T00:15:00Z"))]], aggr=[[COUNT(cpu.user)]]    |
|    |     TableScan: cpu projection=[time, user], full_filters=[cpu.time >= TimestampNanosecond(957528000000000000, None), cpu.time <= TimestampNanosecond(957531540000000000, None)]    |
| physical_plan    | ProjectionExec: expr=[date_bin(Utf8("1 month"),cpu.time,Utf8("1970-12-31T00:15:00Z"))@0 as month, COUNT(cpu.user)@1 as COUNT(cpu.user)]    |
|    |   AggregateExec: mode=FinalPartitioned, gby=[date_bin(Utf8("1 month"),cpu.time,Utf8("1970-12-31T00:15:00Z"))@0 as date_bin(Utf8("1 month"),cpu.time,Utf8("1970-12-31T00:15:00Z"))], aggr=[COUNT(cpu.user)]    |
|    |     CoalesceBatchesExec: target_batch_size=8192    |
|    |       RepartitionExec: partitioning=Hash([Column { name: "date_bin(Utf8(\"1 month\"),cpu.time,Utf8(\"1970-12-31T00:15:00Z\"))", index: 0 }], 4), input_partitions=4    |
|    |         AggregateExec: mode=Partial, gby=[date_bin(79228162514264337593543950336, time@0, 31450500000000000) as date_bin(Utf8("1 month"),cpu.time,Utf8("1970-12-31T00:15:00Z"))], aggr=[COUNT(cpu.user)]    |
|    |           RepartitionExec: partitioning=RoundRobinBatch(4), input_partitions=1    |
|    |             CoalesceBatchesExec: target_batch_size=8192    |
|    |               FilterExec: time@0 >= 957528000000000000 AND time@0 <= 957531540000000000    |
|    |                 ParquetExec: file_groups={1 group: [[1/1/1/00000000-0000-0000-0000-000000000000.parquet]]}, projection=[time, user], predicate=time@2 >= 957528000000000000 AND time@2 <= 957531540000000000, pruning_predicate=time_max@0 >= 957528000000000000 AND time_min@1 <= 957531540000000000    |
|    |    |
----------