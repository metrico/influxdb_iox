-- Test Setup: ManyFieldsSeveralChunks
-- SQL: SELECT * from h2o;
-- Results After Sorting
+---------+------------+-------+------+--------------------------------+
| city    | other_temp | state | temp | time                           |
+---------+------------+-------+------+--------------------------------+
| Andover | 72.4       | CA    |      | 1970-01-01T00:00:00.000000150Z |
| Andover |            | CA    | 67.3 | 1970-01-01T00:00:00.000000500Z |
| Boston  | 68.2       | MA    |      | 1970-01-01T00:00:00.000000450Z |
| Boston  | 80         | MA    |      | 1970-01-01T00:00:00.000000250Z |
| Boston  |            | MA    | 70.4 | 1970-01-01T00:00:00.000000050Z |
| Boston  |            | MA    | 80.7 | 1970-01-01T00:00:00.000000350Z |
| Boston  |            | MA    | 88.6 | 1970-01-01T00:00:00.000000230Z |
+---------+------------+-------+------+--------------------------------+
-- SQL: EXPLAIN SELECT * from h2o;
-- Results After Normalizing UUIDs
+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| plan_type     | plan                                                                                                                                                                                                                       |
+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| logical_plan  | Projection: h2o.city, h2o.other_temp, h2o.state, h2o.temp, h2o.time                                                                                                                                                        |
|               |   TableScan: h2o projection=[city, other_temp, state, temp, time]                                                                                                                                                          |
| physical_plan | ProjectionExec: expr=[city@0 as city, other_temp@1 as other_temp, state@2 as state, temp@3 as temp, time@4 as time]                                                                                                        |
|               |   UnionExec                                                                                                                                                                                                                |
|               |     DeduplicateExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                                   |
|               |       SortPreservingMergeExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                         |
|               |         UnionExec                                                                                                                                                                                                          |
|               |           ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000000.parquet]]}, output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], projection=[city, other_temp, state, temp, time] |
|               |           ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000001.parquet]]}, output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], projection=[city, other_temp, state, temp, time] |
|               |           ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000002.parquet]]}, output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], projection=[city, other_temp, state, temp, time] |
|               |     DeduplicateExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                                   |
|               |       RecordBatchesExec: batches_groups=1 batches=1                                                                                                                                                                        |
|               |     ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000003.parquet]]}, projection=[city, other_temp, state, temp, time]                                                              |
|               |                                                                                                                                                                                                                            |
+---------------+----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
-- SQL: select temp, other_temp, time from h2o;
-- Results After Sorting
+------+------------+--------------------------------+
| temp | other_temp | time                           |
+------+------------+--------------------------------+
| 67.3 |            | 1970-01-01T00:00:00.000000500Z |
| 70.4 |            | 1970-01-01T00:00:00.000000050Z |
| 80.7 |            | 1970-01-01T00:00:00.000000350Z |
| 88.6 |            | 1970-01-01T00:00:00.000000230Z |
|      | 68.2       | 1970-01-01T00:00:00.000000450Z |
|      | 72.4       | 1970-01-01T00:00:00.000000150Z |
|      | 80         | 1970-01-01T00:00:00.000000250Z |
+------+------------+--------------------------------+
-- SQL: EXPLAIN select temp, other_temp, time from h2o;
-- Results After Normalizing UUIDs
+---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| plan_type     | plan                                                                                                                                                                                                                           |
+---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| logical_plan  | Projection: h2o.temp, h2o.other_temp, h2o.time                                                                                                                                                                                 |
|               |   TableScan: h2o projection=[other_temp, temp, time]                                                                                                                                                                           |
| physical_plan | ProjectionExec: expr=[temp@1 as temp, other_temp@0 as other_temp, time@2 as time]                                                                                                                                              |
|               |   UnionExec                                                                                                                                                                                                                    |
|               |     ProjectionExec: expr=[other_temp@1 as other_temp, temp@3 as temp, time@4 as time]                                                                                                                                          |
|               |       RepartitionExec: partitioning=RoundRobinBatch(4)                                                                                                                                                                         |
|               |         DeduplicateExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                                   |
|               |           SortPreservingMergeExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                         |
|               |             UnionExec                                                                                                                                                                                                          |
|               |               ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000000.parquet]]}, output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], projection=[city, other_temp, state, temp, time] |
|               |               ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000001.parquet]]}, output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], projection=[city, other_temp, state, temp, time] |
|               |               ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000002.parquet]]}, output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], projection=[city, other_temp, state, temp, time] |
|               |     ProjectionExec: expr=[other_temp@1 as other_temp, temp@3 as temp, time@4 as time]                                                                                                                                          |
|               |       RepartitionExec: partitioning=RoundRobinBatch(4)                                                                                                                                                                         |
|               |         DeduplicateExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                                   |
|               |           RecordBatchesExec: batches_groups=1 batches=1                                                                                                                                                                        |
|               |     ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000003.parquet]]}, projection=[other_temp, temp, time]                                                                               |
|               |                                                                                                                                                                                                                                |
+---------------+--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
-- SQL: EXPLAIN SELECT * from h2o where time >= to_timestamp('1970-01-01T00:00:00.000000250+00:00');
-- Results After Normalizing UUIDs
+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| plan_type     | plan                                                                                                                                                                                                                                                                                                                    |
+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
| logical_plan  | Projection: h2o.city, h2o.other_temp, h2o.state, h2o.temp, h2o.time                                                                                                                                                                                                                                                     |
|               |   Filter: h2o.time >= TimestampNanosecond(250, None)                                                                                                                                                                                                                                                                    |
|               |     TableScan: h2o projection=[city, other_temp, state, temp, time], partial_filters=[h2o.time >= TimestampNanosecond(250, None)]                                                                                                                                                                                       |
| physical_plan | ProjectionExec: expr=[city@0 as city, other_temp@1 as other_temp, state@2 as state, temp@3 as temp, time@4 as time]                                                                                                                                                                                                     |
|               |   CoalesceBatchesExec: target_batch_size=4096                                                                                                                                                                                                                                                                           |
|               |     FilterExec: time@4 >= 250                                                                                                                                                                                                                                                                                           |
|               |       RepartitionExec: partitioning=RoundRobinBatch(4)                                                                                                                                                                                                                                                                  |
|               |         UnionExec                                                                                                                                                                                                                                                                                                       |
|               |           DeduplicateExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                                                                                                                          |
|               |             SortPreservingMergeExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                                                                                                                |
|               |               UnionExec                                                                                                                                                                                                                                                                                                 |
|               |                 ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000000.parquet]]}, predicate=time >= TimestampNanosecond(250, None), pruning_predicate=time_max@0 >= 250, output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], projection=[city, other_temp, state, temp, time] |
|               |                 ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000001.parquet]]}, predicate=time >= TimestampNanosecond(250, None), pruning_predicate=time_max@0 >= 250, output_ordering=[city@0 ASC, state@2 ASC, time@4 ASC], projection=[city, other_temp, state, temp, time] |
|               |           DeduplicateExec: [city@0 ASC,state@2 ASC,time@4 ASC]                                                                                                                                                                                                                                                          |
|               |             RecordBatchesExec: batches_groups=1 batches=1                                                                                                                                                                                                                                                               |
|               |           ParquetExec: limit=None, partitions={1 group: [[1/1/1/1/00000000-0000-0000-0000-000000000002.parquet]]}, predicate=time >= TimestampNanosecond(250, None), pruning_predicate=time_max@0 >= 250, projection=[city, other_temp, state, temp, time]                                                              |
|               |                                                                                                                                                                                                                                                                                                                         |
+---------------+-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------+
